(()=>{"use strict";const e="lunar-explorer-2024-02-16",t=[];self.addEventListener("activate",(t=>{t.waitUntil(caches.keys().then((t=>Promise.all(t.filter((t=>t!==e)).map((e=>caches.delete(e)))))).then((()=>self.clients.claim())))})),self.addEventListener("install",(a=>{a.waitUntil((async()=>{const a=await caches.open(e);await a.addAll(t)})())})),self.addEventListener("fetch",(t=>{console.log(`*** FETCH: ${t.request.url}`),t.respondWith((async()=>{const a=await caches.open(e),s=await a.match(t.request);if(s)return s;try{const e=await async function(e,t={},a=5,s=1e3){let n=a-1;for(;;){try{const a=await fetch(e,t);if(a.ok)return a}catch{}if(--n<0)break;await new Promise((e=>setTimeout(e,s)))}throw new Error("Failed to fetch.")}(t.request,new URL(t.request.url).hostname!==self.location.hostname?{mode:"cors",credentials:"omit"}:{});return e.ok?await a.put(t.request,e.clone()):console.log(`${t.request.url}: ${e.status}`),e}catch{return new Response("Service Unavailable",{status:503})}})())}))})();