(()=>{"use strict";const e="lunar-explorer-2024-02-17";self.addEventListener("activate",(t=>{t.waitUntil(caches.keys().then((t=>Promise.all(t.filter((t=>t!==e)).map((e=>caches.delete(e)))))).then((()=>self.clients.claim())))})),self.addEventListener("fetch",(t=>{t.respondWith(caches.open(e).then((e=>e.match(t.request).then((n=>{if(n)return n;const s=new URL(t.request.url).hostname!==self.location.hostname?{mode:"cors",credentials:"omit"}:{};return async function(e,t={}){for(let n=4;n>=0;--n)try{const n=await fetch(e,t);if(!n.ok)continue;const s=n.headers.get("Content-Length"),r=s?parseInt(s,10):0,a=r>0&&e.url.includes("resources.zip"),c=n.body;if(null===c)continue;const o=c.getReader(),l=[];let h=0;for(;;){const{done:e,value:t}=await o.read();if(e)break;l.push(t),h+=t.length,a&&self.clients.matchAll().then((e=>{e.forEach((e=>{e.postMessage(h/r)}))}))}const i=new Uint8Array(h);let u=0;return l.forEach((e=>{i.set(e,u),u+=e.length})),new Response(i,{status:200,statusText:"OK",headers:n.headers})}catch(e){if(0===n)throw e}throw new Error("Failed to fetch.")}(t.request,s).then((n=>(e.put(t.request,n.clone()).then((e=>{})),n)))})))).catch((()=>new Response("Service Unavailable",{status:503}))))}))})();