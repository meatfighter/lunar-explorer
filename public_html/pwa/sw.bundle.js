(()=>{"use strict";const e="lunar-explorer-2024-02-16",t=[];self.addEventListener("activate",(t=>{t.waitUntil(caches.keys().then((t=>Promise.all(t.filter((t=>t!==e)).map((e=>caches.delete(e)))))).then((()=>self.clients.claim())))})),self.addEventListener("install",(s=>{s.waitUntil((async()=>{const s=await caches.open(e);await s.addAll(t)})())})),self.addEventListener("fetch",(t=>{console.log(`*** FETCH: ${t.request.url}`),t.respondWith(caches.open(e).then((e=>e.match(t.request).then((s=>{if(s)return s;const n=new URL(t.request.url).hostname!==self.location.hostname?{mode:"cors",credentials:"omit"}:{};return async function(e,t={},s=5,n=1e3){let a=s-1;for(;;){try{const s=await fetch(e,t);if(s.ok)return s}catch{}if(--a<0)break;await new Promise((e=>setTimeout(e,n)))}throw new Error("Failed to fetch.")}(t.request,n).then((s=>(s.ok?e.put(t.request,s.clone()):console.log(`${t.request.url}: ${s.status}`),s)))})))).catch((()=>new Response("Service Unavailable",{status:503}))))}))})();