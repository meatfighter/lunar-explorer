(()=>{"use strict";const e="lunar-explorer-2024-02-16",t=["app.bundle.js","app-chunk.bundle.js","app.css","app.html","apple-touch-icon.png","favicon.ico","favicon.svg","google-touch-icon-192.png","google-touch-icon-512.png","jszip.bundle.js","lunar-explorer.zip","manifest.json","mask-icon.svg"];self.addEventListener("install",(a=>{a.waitUntil((async()=>{const a=await caches.open(e);await a.addAll(t)})())})),self.addEventListener("fetch",(t=>{t.respondWith((async()=>{const a=await caches.open(e),n=await a.match(t.request);if(n)return n;try{const e=await async function(e,t={},a=5,n=1e3){let s=a-1;for(;;){try{const a=await fetch(e,t);if(a.ok)return a}catch{}if(--s<0)break;await new Promise((e=>setTimeout(e,n)))}throw new Error("Failed to fetch.")}(t.request,new URL(t.request.url).hostname!==self.location.hostname?{mode:"cors",credentials:"omit"}:{});return await a.put(t.request,e.clone()),e}catch{return new Response("Service Unavailable",{status:503})}})())})),self.addEventListener("activate",(t=>{t.waitUntil(caches.keys().then((t=>Promise.all(t.filter((t=>t!==e)).map((e=>caches.delete(e)))))).then((()=>self.clients.claim())))}))})();